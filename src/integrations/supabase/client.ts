
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://lodpoepylygsryjdkqjg.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImxvZHBvZXB5bHlnc3J5amRrcWpnIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDYyMDM3NzIsImV4cCI6MjA2MTc3OTc3Mn0.RUoYlrKR4D2wwzDSTU7rGp9Xg1wvG-Mz2i9wk94DHlw";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    auth: {
      autoRefreshToken: true,
      persistSession: true
    },
    global: {
      headers: {
        'x-application-name': 'prospect-pulse',
      },
    }
  }
);

// Utility function to test Supabase connection
export const testSupabaseConnection = async () => {
  try {
    console.log("Testing Supabase connection...");
    console.log("Supabase URL:", SUPABASE_URL);
    console.log("Supabase key available:", !!SUPABASE_PUBLISHABLE_KEY);
    
    // First test if we can access the database at all
    const { data: testData, error: testError } = await supabase
      .from("prospects")
      .select("*")
      .limit(1);
    
    if (testError) {
      console.error("Supabase connection test failed:", testError);
      return { 
        success: false, 
        error: testError,
        message: `Connection test failed: ${testError.message}`
      };
    }
    
    console.log("Supabase connection successful, test data:", testData);
    return { 
      success: true, 
      data: testData,
      message: `Connected successfully. Found ${testData?.length || 0} test records.`
    };
  } catch (err) {
    console.error("Connection test failed with exception:", err);
    return { 
      success: false, 
      error: err instanceof Error ? err : new Error("Unknown connection error"),
      message: `Exception during connection test: ${err instanceof Error ? err.message : "Unknown error"}`
    };
  }
};
